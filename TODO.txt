LEFT OFF:
- write the following functions and add context objects to them
    - traverse
    - traverseChildFirst
    - find
    - findChildFirst
- Test the four traverse/find functions
- Go through all the objects and start adding any other method tests needed
- add a test to make sure children are the correct type?
- for traverse, use a const type to return the types? Like UserGroup?? OR A CLASS WITH STATIC READONLY TYPES?


GENERAL RULES:
================
- I am allowing ambiguous rational inputs like a/b/c but it will make assumptions without ()
- I am allowing inputs of (a)(b) - it will assume these are two factors
- I am allowing a^b/c => ((a^(b))/(c))
- I am allowing a^b*c => a^(b)*c