LEFT OFF:
- Test the operation functions
- Should I add a siblings getter to the context object? Would that help my existing actions?
    - And/or leftSiblings & rightSiblings?
- Create testing application - sepearate angular module
- move string formatter
- move other service
- Add new operations!
    - Try to find old app and see what order I did things in and what I'm missing
- maybe combine the multiplication/addition/subtraction/zero factors/zero terms operators in to one?
- inside services, create a 'Core' services and move the factory/error-handler/string formatter in to it
- Create tests for new EMPTY_PARAMETER function errors - USE STASH
    - Maybe only check for this error in the Factory class since that's the only place it might show up? The rest will be caught through constructor inputs
    - Create another test to make sure there aren't EXTRA parameters or not ENOUGH parameters
- Do I want doubles to remove the leading 0 in cases like '0.5'?


GENERAL RULES:
================
- I am allowing ambiguous rational inputs like a/b/c but it will make assumptions without ()
- I am allowing inputs of (a)(b) - it will assume these are two factors
- I am allowing a^b/c => ((a^(b))/(c))
- I am allowing a^b*c => a^(b)*c